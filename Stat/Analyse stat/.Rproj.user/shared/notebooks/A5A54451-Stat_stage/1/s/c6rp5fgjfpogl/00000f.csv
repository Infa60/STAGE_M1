"0",""
"0","articulation_name <- resultats_amplitude_IMU |> distinct(Articulation)"
"0","vitesse_use <- resultats_amplitude_markerless |> distinct(`Vitesse velo`)"
"0",""
"0","for (i in 1:length(articulation_name$Articulation)) {"
"0","  for (j in 1:length(vitesse_use$`Vitesse velo`)) {"
"0","    articulation <- articulation_name$Articulation[i]"
"0","    vitesse <- vitesse_use$`Vitesse velo`[j]"
"0","    "
"0","    "
"0","    "
"0","    dataMarker <- filter(resultats_amplitude_marker,Articulation==articulation) |> filter(`Vitesse velo` == vitesse) |> select(-Articulation,-`Vitesse velo`,-Sujet)"
"0","    dataIMU <- filter(resultats_amplitude_IMU,Articulation==articulation) |> filter(`Vitesse velo` == vitesse) |> select(-Articulation,-`Vitesse velo`,-Sujet)"
"0","    "
"0",""
"0","    # Sélectionner uniquement les valeurs pour les évaluateurs Marker et IMU"
"0","    donnees <- data.frame("
"0","      MethodeA = c(t(dataMarker)),"
"0","      MethodeB = c(t(dataIMU))"
"0","    )"
"0","    "
"0","    # Calculer l'ICC entre les deux jeux de données avec la fonction 'icc()' du package 'irr'"
"0","    #resultat_icc <- icc(donnees[, c(""MethodeA"", ""MethodeB"")], model = ""twoway"", type = ""agreement"", unit = ""average"")"
"0","    "
"0","    resultat_icc <- ICC(donnees)"
"0","    resultat_icc$results$ICC[6]"
"0","    resultat_icc$results$p[6]"
"0","    resultat_icc$results$`lower bound`[6]"
"0","    resultat_icc$results$`upper bound`[6]"
"0",""
"0","    "
"0","    # Extraction des valeurs d'intérêt"
"0","    icc_value <-resultat_icc$results$ICC[6]"
"0","    confidence_low <- resultat_icc$results$`lower bound`[6]"
"0","    confidence_high <- resultat_icc$results$`upper bound`[6]"
"0","    p_value <- resultat_icc$results$p[6]"
"0","    "
"0","    "
"0","    "
"0","    # Création d'un data frame avec les valeurs"
"0","    result_df <- data.frame(ICC = round(icc_value,3),"
"0","                            ConfidenceInterval = paste(round(confidence_low,3), round(confidence_high,3), sep = "" - ""),"
"0","                            p_value = round(p_value,4))"
"0","    "
"0","    # Ajout des colonnes au data frame"
"0","    result_df$Articulation <- articulation"
"0","    result_df$Vitesse <- vitesse"
"0","    "
"0","    # Réorganiser l'ordre des colonnes"
"0","    result_df <- result_df[, c(""Articulation"", ""Vitesse"", ""ICC"", ""ConfidenceInterval"", ""p_value"")]"
"0","    "
"0","    "
"0","    # Spécifier le chemin et le nom du fichier CSV"
"0","    chemin_fichier <- ""/Users/mathieubourgeois/Desktop/resultats_icc3.csv"""
"0","    "
"0","    # Écriture du data frame dans le fichier CSV"
"0","    #write.csv(result_df, chemin_fichier, row.names = FALSE)"
"0","    write.table(result_df, chemin_fichier, sep = "","", append = TRUE, row.names = FALSE, col.names = !file.exists(chemin_fichier))"
"0",""
"0","  }"
"0","}"
"2","Warning: appending column names to file"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
